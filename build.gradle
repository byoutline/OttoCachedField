apply plugin: 'java'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath 'net.saliman:gradle-cobertura-plugin:2.0.0' // cobertura plugin
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.3.1'
    }
}

apply from: 'gradle/byoutline/javaLib.gradle'

repositories {
//    mavenCentral()
    maven { url "https://jcenter.bintray.com/" }
    // For snapshots of event callback and spock testing
//    maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
}

configurations {
    provided
}

sourceSets {
    main {
        compileClasspath += configurations.provided
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.byoutline.ottoeventcallback:ottoeventcallback:1.2.5'
    compile 'javax.inject:javax.inject:1'
    compile 'com.google.code.findbugs:jsr305:3.0.0'
    compile 'com.squareup:otto:1.3.5'
    compile 'com.byoutline.ibuscachedfield:ibuscachedfield:1.0.3'
    compile 'com.byoutline.cachedfield:cachedfield:1.5.0'
    provided 'com.android.databinding:baseLibrary:1.0-rc4'
    testCompile 'com.android.databinding:baseLibrary:1.0-rc4'
    testCompile 'com.google.guava:guava:18.0'
}

// Ignore coverage of google classes.
jacocoTestReport {
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: 'com/byoutline/shadow/**')
        })
    }
}

apply from: 'maven-push.gradle'
